import pickle,sys,os,commands

def list2host(oneList,filePath):
	tN = len(oneList[0])
	with open(filePath, 'w') as f:
		f.write('# generated by PyFetchIpv6Hosts\n')
		for i in range(tN):
			f.write(toWriteList[1][i] + '\t\t\t'  + toWriteList[0][i] + '\n')	

def processOneFile(cacheFileName):
	if not os.path.exists(cacheFileName):
		raise ValueError, 'no file'

	with open(cacheFileName,'r') as f:
		finished = pickle.load(f)

	N=len(finished[0])
	toWriteList = [[],[]]
	toWriteList[0]=[finished[0][i] for i in range(N) if len(finished[1][i])>0]
	toWriteList[1]=[finished[1][i] for i in range(N) if len(finished[1][i])>0]

	return toWriteList



if len(sys.argv)>1:
	urlFileName=sys.argv[1]
	print 'urlFileName is ',urlFileName
else:
	urlFileName = 'url.txt'
	print 'urlFileName is ',urlFileName

if urlFileName == 'all':
	cacheFileNames = os.listdir(data)
	cacheFileNames = [each for each in cacheFileNames if each.find('.dat')>0]
	N = len(cacheFileNames)
	toWriteList = set([])
	for i in range(N):
		toWriteList.update(processOneFile('data/'+cacheFileNames[i]))
	toWriteList = list(toWriteList)
	toWriteList.sort()
	filePath = '../hosts.bnu'
	(status, output) = commands.getstatusoutput('cp '+filePath+' backups/')
	list2host(toWriteList,filePath)

else:
	cacheFileName = 'data/'+urlFileName+'.cache.dat'
	toWriteList = processOneFile(cacheFileName)
	filePath = 'generatedHosts/'+'myhostOf%s'%(urlFileName)
	list2host(toWriteList, filePath)

